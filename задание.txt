1. PHP
 Реализовать пагинатор, который выглядит так:
 1 ... 17 18 19 [20] 21 22 23 ... 641

 Весь код нужно оформить в виде класса Paginator и написать пример,
 показывающий его работоспособность.

 Класс должен обладать минимум методом установки текущей страницы, и установки
 показываемого количества страниц возле текущей (в приведенном выше примере это 3),
 остальное что душа пожелает (можно, например смена css стилей для отображения)

 2. Написать php-скрипт, который бы выводил собственный код. Использовать функции
 чтения файла нельзя.

 3. Вывести форму, содержащую поле для ввода ключевой фразы и сопроводительный
 текст: «В кл. фразе Вы можете использовать специальные символы: '*'
 - заменяет любую комбинацию символов; '?' - заменяет один символ. Таким образом на
 слово 'газ*' найдется 'газ', 'газета', 'газированный' и т.д. на 'баннер?' - 'баннера', 'баннеру',
 но не 'баннер' и 'баннерный'»
 После отправки формы необходимо осуществить поиск по таблице с единственным
 текстовым полем, по вышеописанному алгоритму.

 4. JavaScript


 Дана таблица без шапки.
 Задача: раскрасить программно все чётные ряды таблицы в серый цвет без использования
 внешних библиотек типа jQuery.

 Решение должно работать в IE6, IE7, Firefox и Opera

 5.
 Вывести «n» объектов (например картинок), которые бы можно было передвигать по
 экрану с помощью мыши. Страница при этом не должна обновляться.